{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varun\\\\OneDrive\\\\Desktop\\\\react\\\\meme-generator\\\\src\\\\MemeGenerator.js\";\nimport React, { Component } from \"react\";\nimport ReactDom from \"react-dom\";\nimport './style.css';\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemImgs: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const memes = response.data.memes;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length);\n    const randMemeImg = this.state.allMemeImgs[randNum].url;\n    this.setState({\n      randomImg: randMemeImg\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"meme-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"topText\",\n      placeholder: \"Top Text\",\n      value: this.state.topText,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"bottomText\",\n      placeholder: \"Bottom Text\",\n      value: this.state.bottomText,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Gen\")), React.createElement(\"div\", {\n      className: \"meme\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.randomImg,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.topText), React.createElement(\"h2\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.bottomText)));\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["C:/Users/varun/OneDrive/Desktop/react/meme-generator/src/MemeGenerator.js"],"names":["React","Component","ReactDom","MemeGenerator","constructor","state","topText","bottomText","randomImg","allMemImgs","handleChange","bind","handleSubmit","componentDidMount","fetch","then","response","json","memes","data","setState","allMemeImgs","event","target","name","value","preventDefault","randNum","Math","floor","random","length","randMemeImg","url","render"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\"\r\nimport ReactDom from \"react-dom\"\r\nimport './style.css';\r\n\r\nclass MemeGenerator extends Component {\r\n\r\n\r\n    constructor(){\r\n\r\n\r\n        super()\r\n        this.state ={\r\n\r\n            topText : \"\",\r\n            bottomText: \"\",\r\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemImgs :[]\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit =this.handleSubmit.bind(this)\r\n\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            const {memes} = response.data\r\n            this.setState({ allMemeImgs: memes })\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name,value } =event.target\r\n        this.setState({[name] : value})\r\n    }\r\n\r\n    handleSubmit(event) {\r\n\r\n        event.preventDefault()\r\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\r\n        const randMemeImg = this.state.allMemeImgs[randNum].url\r\n        this.setState({randomImg: randMemeImg })\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n<div>\r\n            <form className=\"meme-form\" onSubmit={this.handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                name=\"topText\"\r\n                placeholder=\"Top Text\"\r\n                value={this.state.topText}\r\n                onChange={this.handleChange}\r\n            /> \r\n            <input \r\n                type=\"text\"\r\n                name=\"bottomText\"\r\n                placeholder=\"Bottom Text\"\r\n                value={this.state.bottomText}\r\n                onChange={this.handleChange}\r\n            /> \r\n        \r\n            <button>Gen</button>\r\n        </form>\r\n        <div className=\"meme\">\r\n            <img src={this.state.randomImg} alt=\"\" />\r\n            <h2 className=\"top\">{this.state.topText}</h2>\r\n            <h2 className=\"bottom\">{this.state.bottomText}</h2>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MemeGenerator"]},"metadata":{},"sourceType":"module"}